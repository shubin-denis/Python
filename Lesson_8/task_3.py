# Создайте собственный класс-исключение, который должен проверять содержимое списка на
# наличие только чисел. Проверить работу исключения на реальном примере. Необходимо
# запрашивать у пользователя данные и заполнять список только числами. Класс-исключение
# должен контролировать типы данных элементов списка.
# Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока
# пользователь сам не остановит работу скрипта, введя, например, команду “stop”. При этом
# скрипт завершается, сформированный список с числами выводится на экран.
# Подсказка: для данного задания примем, что пользователь может вводить только числа и
# строки. При вводе пользователем очередного элемента необходимо реализовать проверку
# типа элемента и вносить его в список, только если введено число. Класс-исключение должен
# не позволить пользователю ввести текст (не число) и отобразить соответствующее
# сообщение. При этом работа скрипта не должна завершаться.

class NumberError(Exception):
    def __init__(self, text):
        self.text = text
        self.user_list = []

    def is_digit(self):
        answer = input('Введите целое число (для выхода введите "stop"): ')
        while answer != 'stop':
            try:
                int(answer)
            except ValueError:
                print('Введено не целочисленное значение')
            else:
                self.user_list.append(int(answer))
            answer = input('Введите свое число (для выхода введите "stop"): ')
        return self.user_list


try_except = NumberError('asdads')

print(try_except.is_digit())
